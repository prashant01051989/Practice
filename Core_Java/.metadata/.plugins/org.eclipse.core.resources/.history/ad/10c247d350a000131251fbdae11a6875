package com.thread.test;

public class DeadLockTest {

	public static void main(String[] args) {
		Thread t1 = new TransThread1("A");
		Thread t2 = new TransThread1("B");
		t1.start();
		t2.start();

	}
}



class TransThread1 extends Thread {
	private  String st1 = "";
	private  String st2 = "";

	public TransThread1(String name) {
		super(name);
	}

	public void run() {
		for (int i = 0; i < 50; i++) {
			if (getName().equals("A")) {
				synchronized (st1) {
					synchronized (st2) {
						try {
							Thread.sleep((int) (Math.random() * 1000));
						} catch (InterruptedException e) {
						}
						System.out.println("A");
					}
				}
			} else {
				synchronized (st2) {

					synchronized (st1) {
						try {
							Thread.sleep((int) (Math.random() * 1000));
						} catch (InterruptedException e) {
						}
						System.out.println("B");

					}
				}
			}
		}

	}
}
